/** @file       soc1.h
 *  @brief      SoC1 Peripheral Access Layer
 *  @copyright  (c) 2021- Evren Kenanoglu - All Rights Reserved
 *              Permission to use, reproduce, copy, prepare derivative works,
 *              modify, distribute, perform, display or sell this software and/or
 *              its documentation for any purpose is prohibited without the express
 *              written consent of Evren Kenanoglu.
 *  @author     Evren Kenanoglu
 *  @date       15/11/2021
 */
#ifndef FILE_SOC1_H
#define FILE_SOC1_H

/** INCLUDES ******************************************************************/

/** CONSTANTS *****************************************************************/

/** TYPEDEFS ******************************************************************/

/** MACROS ********************************************************************/

#ifndef _SOC1_
#define _SOC1_
#endif

/******************************************************************************
 *# SOC CONTROL REGISTERS
 ******************************************************************************/

/******************************************************************************
 *# SOC CONTROL REGISTERS END
 ******************************************************************************/

/******************************************************************************
 *# SPI REGISTERS
 ******************************************************************************/

/******************************************************************************
 *# SPI REGISTERS END
 ******************************************************************************/

/******************************************************************************
 *# GPIO REGISTERS
 ******************************************************************************/

/******************************************************************************
 * GPIO REGISTERS END
 ******************************************************************************/

/******************************************************************************
 *# ADC REGISTERS
 ******************************************************************************/

/******************************************************************************
 *# ADC REGISTERS END
 ******************************************************************************/

/******************************************************************************
 *# TIMER REGISTERS END
 ******************************************************************************/

/******************************************************************************
 *# TIMER REGISTERS END
 ******************************************************************************/

/******************************************************************************
 *# INTERRUPT CONTROLLER REGISTERS
 ******************************************************************************/

/******************************************************************************
 *# INTERRUPT CONTROLLER REGISTERS END
 ******************************************************************************/

/********************************************************************************
 *# EXCEPTION REGISTER
 ******************************************************************************/

/*## Vendor ID   **************************************************************/

/*## Architecture ID  **************************************/
/*## Implementation ID  **************************************/
/*## Hardware thread ID  **************************************/
/*## Machine status register (mstatus) *************************************   */

/*### machine interrupt enable bit (mie) *******************************/

/*### machine previous interrupt enable bit (mpie) *******************************/

/*### machine previous privilege mode (mpp) *******************************/

/*## Machine interrupt-enable register (mie) **************************************/

/*### machine software interrupt enable (msie) *******************************/

/*### machine timer interrupt enable (mtie) *******************************/

/*### machine external interrupt enable (meie) *******************************/

/*## Machine trap-handler base address (mtvec) **************************************/

/*### machine trap vector mode (mode) *******************************/

/*### machine trap vector base address (base) *******************************/

/*## Scratch register for machine trap handlers **************************************/

/*## Machine exception program counter **************************************/

/*## Machine trap cause (mcause) **************************************/

/*### trap cause code (code) *******************************/

/*### trap cause interrupt (irq) *******************************/

/*## Machine bad address or instruction *****************************/

/*## Machine interrupt pending **************************************/

/*### machine software interrupt pending (msip) *******************************/

/*### machine timer interrupt pending (mtip) *******************************/

/*### machine external interrupt pending (meip) *******************************/

/*## Machine synchronous exceptions enable (msee) (CUSTOM) ******************/

/*## Memory access size (mas) (CUSTOM) **************************************/

/*## Destination register address (radadd) (CUSTOM) **************************/

/*## Memory write value (mwrval) (CUSTOM) ************************************/

/******************************************************************************
 *# EXCEPTION REGISTER END
 ******************************************************************************/

/** VARIABLES *****************************************************************/

/** FUNCTIONS *****************************************************************/

#undef INTERFACE // Should not let this roam free

#endif // FILE_SOC1_H
